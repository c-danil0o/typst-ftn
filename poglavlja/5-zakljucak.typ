= Закључак
<zakljucak>

Кроз овај рад представљен је процес пројектовања, развоја и имплементације свеобухватног софтверског система GymMan, намењеног управљању фитнес центрима. Рад је започет анализом изазова са којима се сусрећу мањи и
средњи фитнес центри, где су као кључни проблеми идентификовани недостатак приступачних и поузданих софтверских решења. Постојећи системи на тржишту често намећу ригидан "cloud-only" модел који је неприкладан за окружења
са нестабилном интернет конекцијом, или су у потпуности локални, чиме се губи могућност модерне дигиталне интеракције са клијентима.

Као одговор на ове проблеме, пројектована је и реализована хибридна архитектура која комбинује најбоље од оба света. Срж система чини "cross-platform" десктоп апликација са "offline-first" приступом,
која омогућава потпуну функционалност и брз одзив без обзира на стање мреже. Ова централна компонента је допуњена опционом инфраструктуром у облаку која омогућава сигурносне резервне копије,
асинхрону синхронизацију података и подршку за пратећу мобилну апликацију намењену члановима.

== Остварени резултати и решени проблеми

Реализовани систем GymMan успешно решава све иницијално постављене функционалне и нефункционалне захтеве. Главни допринос овог рада огледа се у успешној интеграцији различитих технологија у кохерентан и робустан екосистем.

Кључни остварени резултати су:

1.  *Развијена је потпуно функционална десктоп апликација* за управљање члановима, чланаринама, типовима чланарина и контролу приступа. Апликација, изграђена помоћу Tauri и SvelteKit оквира, пружа модеран
    и интуитиван кориснички интерфејс, доступан на Windows, macOS и Linux оперативним системима.

2.  *Имплементирана је "offline-first" архитектура* као темељ система. Коришћењем локалне SQLite базе података као примарног извора података, постигнута је велика поузданост и перформансе.
    Све операције се извршавају тренутно, елиминишући кашњења узрокована мрежном комуникацијом и омогућавајући непрекидан рад чак и у потпуно офлајн окружењу.

3.  *Дизајниран је и имплементиран робустан механизам за асинхрону синхронизацију*. Коришћењем SQL тригера и "outbox" патерна (`pending_changes` табела), свака промена у локалној бази се аутоматски бележи.
    Позадински "worker" процес у Rust-у, користећи "claim-then-process" логику, поуздано шаље ове промене на централну PostgreSQL базу на Supabase платформи, уз механизме за поновне покушаје и руковање грешкама.
    Овим је решен проблем конзистентности података између локалног и "cloud" окружења.

4.  *Креиран је сигуран и скалабилан систем за резервне копије*. Интеграцијом са AWS сервисима (S3, Lambda, API Gateway), корисницима је омогућено да на једноставан начин праве верзионисане резервне копије
    својих података на удаљеној локацији, чиме се штите од губитка података услед хардверских кварова.

5.  *Развијена је мобилна апликација за чланове* коришћењем Flutter оквира. Апликација омогућава члановима да прате статус свог чланства и користе дигитални бар-код за приступ теретани.
    Сигурност података је обезбеђена кроз Supabase Auth систем за аутентификацију и Row-Level Security (RLS) полисе које гарантују да сваки корисник може приступити искључиво својим подацима.

6.  *Успостављен је комплетан CI/CD процес* за дистрибуцију и аутоматско ажурирање десктоп апликације. Коришћењем _GitHub Actions_ и _Tauri Updater_ плагина, процес објављивања нових верзија је у
    потпуности аутоматизован, од компајлирања и дигиталног потписивања, до обавештавања корисника и инсталације ажурирања.

== Предности и мане имплементираног решења

Свако инжењерско решење представља компромис, па тако и систем GymMan има своје предности и недостатке.

Предности:

- Поузданост и перформансе: "Offline-first" приступ гарантује да је апликација увек доступна и брза, што је од кључног значаја за пословне операције које се одвијају у реалном времену, као што је контрола приступа.
- Флексибилност: Систем може да функционише у три различита режима: потпуно офлајн, офлајн са бекапом у облаку, или потпуно онлајн са синхронизацијом. Ово омогућава да се прилагоди потребама и техничким могућностима различитих
   фитнес центара.
- Сигурност и контрола података: Корисници задржавају власништво над својим подацима на локалном уређају. "Cloud" компоненте су опционе и користе модерне сигурносне праксе (RLS, JWT, хеширање лозинки, HTTPS).
- Ниски трошкови одржавања: Ослањање на "serverless" архитектуру (AWS Lambda, Supabase) и "open-source" технологије значајно смањује оперативне трошкове у поређењу са традиционалним серверским решењима.
- Модерно корисничко искуство: Комбинација интуитивне десктоп апликације и пратеће мобилне апликације подиже квалитет услуге

Мане и ограничења:

- Сложеност синхронизације: Иако је имплементирани "outbox" патерн робустан, он подразумева једносмерну синхронизацију (са локалне на удаљену базу).
  Увођење двосмерне синхронизације би увело значајну комплексност у виду решавања конфликата (енгл. _conflict resolution_), што је изван оквира овог рада.
- Потенцијално кашњење података на мобилној апликацији: Због асинхроне природе синхронизације, подаци на мобилној апликацији могу каснити неколико секунди или минута у односу на стање у
  локалној бази, у зависности од интервала синхронизације и стања мреже. За тренутне потребе (преглед статуса), ово кашњење је прихватљиво.
- Захтеви за иницијалну конфигурацију: Иако је коришћење апликације једноставно, иницијално подешавање _online_ режима (унос URL-ова и API кључева) захтева одређени ниво техничког знања администратора система и комуникацију са
  инжењерима за подршку.

== Правци даљег развоја

Имплементирани систем представља чврсту основу на коју се могу надоградити бројне нове функционалности. Неки од потенцијалних праваца за даљи развој су:

-  Интеграција система за плаћање: Додавање могућности за обраду онлајн плаћања чланарина путем "payment gateway" сервиса (нпр. Stripe @stripe), што би омогућило члановима да самостално продужавају чланарину преко мобилне апликације.
-  Напредни модул за извештавање: Развој комплекснијих аналитичких извештаја и функционалности извоза података у различитим форматима (CSV, PDF) за потребе пословне анализе.
-  Систем за заказивање групних тренинга: Додавање модула који би омогућио члановима да преко мобилне апликације виде распоред тренинга и резервишу своје место.
-  Подршка за више објеката: Проширење архитектуре како би један власник могао да управља са више фитнес центара унутар једне инстанце апликације, уз раздвајање података по локацији.
-  Двосмерна синхронизација: Истраживање и имплементација механизма за двосмерну синхронизацију, што би омогућило, на пример, да се измене направљене на _cloud_-у (као што је онлајн обнова чланарине)
    рефлектују назад у локалној бази. У овом случају, прелазак на другу локалну базу података (нпр. Turso @turso) која нативно подржава ову функционалност могао би бити разматран.

У закључку, овај рад је успешно демонстрирао како се комбинацијом модерних "cross-platform" технологија и промишљеном архитектуром може креирати свеобухватно, поуздано и скалабилно софтверско решење.
Пројекат GymMan не само да решава конкретне проблеме у пословању фитнес центара, већ служи и као практичан пример примене савремених инжењерских принципа у развоју комплексних информационих система.
